
# The candidates are generated by iterating the mesh, each vertex is a candidate.
# Afterwards they are filtered to reduce the number of used candidates using pcl::RandomSample.
# The given percentage of candidates are sampled but at least the min_number_of_candidates_to_keep.
# Percentage in range [0.0,1.0].
percentage_candidates_to_keep: 0.01
min_number_of_candidates_to_keep: 100


# Mesh vertices whose costs are below this threshold are potential candidates.
cost_threshold: 0.5

# The iteration of the mesh vertices for candidate generation starts with a vertex close to the following starting point.
#   This way, only vertices that are reachable from the starting point (according to the cost) are considered as candidates.
#   If the starting point is used, make sure that the cost threshold is set high enough so that narrow areas,
#   such as doorways, can be traversed (if they are wide enough for the robot).
#   Otherwise, there will be no candidates in areas behind these bottlenecks.
#start_point_for_iter_vertices: [1.5, 1.5, 0.4]
start_point_for_iter_vertices: [1.75,-5.5,12.4] # large model
